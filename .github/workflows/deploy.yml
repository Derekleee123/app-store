name: Deploy Next.js App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test -- --coverage --watchAll=false

      - name: Show coverage directory
        run: ls -R coverage # 显示覆盖率目录，以确认文件是否存在

      - name: Generate coverage badge
        run: npm run coverage-badge # 确保生成覆盖率徽章

      - name: Build the project
        run: npm run build

      - name: Build Docker image
        run: docker build -t derek11428/app-store:latest .

      - name: List Docker images
        run: docker images

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push derek11428/app-store:latest

      - name: Update README with version and coverage percentage
        run: |
          VERSION=$(node -p "require('./package.json').version")
          sed -i "s|<!--version-->|![Version](https://img.shields.io/badge/version-$VERSION-blue)|g" README.md

          # 計算測試覆蓋率
          if [ -f coverage/clover.xml ]; then
            coveredstatements=$(xmllint --xpath "string(//metrics/@coveredstatements)" coverage/clover.xml)
            statements=$(xmllint --xpath "string(//metrics/@statements)" coverage/clover.xml)
            coverage_percent=$(echo "scale=2; $coveredstatements / $statements * 100" | bc)
            BADGE="![Coverage](https://img.shields.io/badge/Coverage-$coverage_percent%25-brightgreen)"

            if [[ "$OSTYPE" == "darwin"* ]]; then
              # macOS 系統
              sed -i '' "s|!\[Coverage\].*|$BADGE|" README.md
            else
              # 其他 Linux 系統
              sed -i "s|!\[Coverage\].*|$BADGE|" README.md
            fi

            echo "Coverage rate updated to $coverage_percent%"
          else
            echo "Coverage file not found!"  # 输出调试信息
          fi

      - name: Commit and push changes to README
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "github-actions"
          git add README.md
          git commit -m "Update README with version and coverage percentage" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
